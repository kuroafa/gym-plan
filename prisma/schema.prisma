// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], name: "userId")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Gender {
  Male
  Female
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  username           String @unique
  age               String
  gender            Gender
  weight            String
  height            String
  password           String 
  createdAt          DateTime  @default(now())
  updateAt            DateTime  @updatedAt
  accounts          Account[]
  sessions          Session[]
  plan              Plan[]
  hasCompletedSetup Boolean?
  Goal              Goal[]
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum FitnessGoal {
  LEG_DAY
  BACK_DAY
  SHOULDERS_DAY
  CHEST_DAY
  ARMS_DAY
  CARDIO
  STRENGTH_TRAINING
  FLEXIBILITY
  BALANCE_TRAINING
}

model Plan {
  id           String      @id @default(cuid())
  planName     String?
  description  String?
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  day          Day
  fitnessGoals FitnessGoal
}

model Goal {
  id     String @id @default(cuid())
  goal   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  createdAt     DateTime       @default(now())
}
